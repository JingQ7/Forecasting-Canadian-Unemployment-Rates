clear
clc


% Step0. Orignal data
load('data0.mat', 'data0')%Orignal data.mat
rtn0 = data0; 
rtn0 = rtn(isnan(rtn)==0); 
T = length(rtn0); 
L = 20; % maximum lag considered

% Plot original data
plot(rtn0)
xlabel('Time')
ylabel('Canada Unemployment Rate in %')
title('Unemployment Rate, Monthly Canada 1976-2016')

% ADF test
stat1 = ADFtest(rtn0,20,1) 
stat2 = ADFtest(rtn0,20,2) 
stat3 = ADFtest(rtn0,20,3) 

% A stationary time series at First-Difference
data = diff(rtn0);
%save stationary data as data.mat


% Step1. Adjusted stationary data
load('gold1.mat', 'data')
rtn = data; 
rtn = rtn(isnan(rtn)==0); 
T = length(rtn); 
L = 20; % maximum lag considered

% Plot data
plot(rtn)
xlabel('Time')
ylabel('Canada Unemployment Rate in %')
title('Unemployment Rate, Monthly Canada 1976-2016')

% ADF test
stat1 = ADFtest(rtn,20,1) 
stat2 = ADFtest(rtn,20,2) 
stat3 = ADFtest(rtn,20,3) 
%the unemployment rate become a stationary data



% Step2. ACF & PACF

% Sample ACFs
ACFhat = zeros(20,1); 
for i=1:20
   ACFhat(i) = (sum((rtn(i+1:end)-mean(rtn)).*(rtn(1:end-i)-mean(rtn))))/(sum((rtn-mean(rtn)).^2)); 
end
autocorr(rtn)

% PACF
PACF_stat = zeros(L,1); 
for l = 1:L
    [para_vec, LogLik, sig2, res]=ARMA(rtn);
    PACF_stat(l,1) = para_vec(end)*sqrt(T);
end
parcorr(rtn)



% Step3. Find p&q

% AIC
AIC_stat = zeros(L,1); 
for l=1:L
    [para_vec, LogLik, sig2, res]=ARMA(rtn);
    AIC_stat(l,1) = (-2/T)*LogLik + (2/T)*l;
    
end

fprintf('AIC values are')
AIC_stat'

% BIC
BIC_stat = zeros(L,1); 

for l=1:L
    [para_vec, LogLik, sig2, res]=ARMA(rtn);
    BIC_stat(l,1) = (-2/T)*LogLik + (log(T)/T)*l;
    
end

fprintf('BIC values are')
BIC_stat'



% step4. Estimation of ARMA(1,1) model 

[para_vec, LogLik, sig2, res]=ARMA(rtn);
fprintf('Estimated coefficinets from ARMA are')
para_vec'

% model checking
[para_vec, ~, ~, res] = ARMA(rtn);
[stat,~] = LBtest(res,2); 
fprintf('P-value for the Ljung-Box test with 2 lags is:')
chi2cdf(stat,1,'upper') 



% step5. Forecasted values

% ARMA(1,1) estimation

[para_vec, LogLik, sig2, res] = ARMA(rtn(1:end-12)); 

% Forecasted values
phi0 = para_vec(1); 
phi1 = para_vec(2); 
theta1 = para_vec(3); 

predicted = zeros(12,1); 

predicted(1,1) = phi0 + phi1*rtn(end-12) - theta1*res(end); 

for t=2:12
        predicted(t,1) = phi0 + phi1*predicted(t-1,1);     
end

% plotting
plot(1:12, predicted, 'r', 1:12, rtn(end-11:end),'b--')
legend('predicted', 'realized')
title('predicted and realized values')



% step7. Testing for GARCH effect
% For a given m, use Ljung-Box statistics Q(m) on {a^2} to test that ACFs of this series are zero.
% If null rejected, there is conditional heteroscedasticity.

% Estimation of ARMA(1,1) model 
[para_vec, LogLik, sig2, res]=ARMA(rtn);
fprintf('Estimated coefficinets from ARMA are')
para_vec'

% Getting the residual series
a = zeros(T, 1); 
a(1) = rtn(1) - mean(rtn); 
for t=2:T
    a(t) = rtn(t) + 0.0001 - 0.8819 *rtn(t-1) + 0.7661 *a(t-1); 
end   
a2 = a.^2; 
plot(a2)
ylabel('squared residuals')
xlabel('Time index')
title('Modeling changes in volatility over time')

% Ljung-Box test with m=2
[stat, pvalue] = LBtest(a2,2); 
fprintf('P-value for the Ljung-Box test with 2 lags is:')
pvalue



% step8. GARCH(1) model
% order determine, estimate model, model check, forecasting.

% Estimation of ARMA(1,1) model, Getting the residual series
[para_vec, LogLik, sig2, res]=ARMA(rtn);
a = zeros(T, 1); 
a(1) = rtn(1) - mean(rtn); 
for t=2:T
    a(t) = rtn(t) + 0.0001 - 0.8819 *rtn(t-1) + 0.7661 *a(t-1); 
end   
a2 = a.^2; 

% AIC and BIC
AIC_stat = zeros(L,1); 
for l=1:L
    [para_vec, LogLik, sig2, res]=ARMA(a2);
    AIC_stat(l,1) = (-2/T)*LogLik + (2/T)*l;
    
end
fprintf('AIC values are')
AIC_stat'

BIC_stat = zeros(L,1); 
for l=1:L
    [para_vec, LogLik, sig2, res]=ARMA(a2);
    BIC_stat(l,1) = (-2/T)*LogLik + (log(T)/T)*l;
    
end
fprintf('BIC values are')
BIC_stat'

% Estimate GARCH(1,1) model
[para_vec, LogLik, sig2]=GARCH11est(a2);
fprintf('Estimated coefficinets from GARCH are')
para_vec'

% Ljung-Box test to check the ARCH model validity
a2_til = a2(1:end)./sig2; 
[stat, pvalue] = LBtest(a2_til,2); 
fprintf('P-value for the Ljung-Box test with 2 lags is:')
pvalue

% Forecast for the following 12 months
predicted = zeros(12,1); 

predicted(1,1) = para_vec'*[1; a2(end-12,1); sig2(end,1)]; 
for t=2:12
    predicted(t,1) = para_vec'*[1; predicted(t-1,1); predicted(t-1,1)]; 
end


plot(1:12, predicted, 'r', 1:12, a2(end-11:end),'b--')
legend('predicted \sigma^2', 'realized a^2')
title('predicted and realized values')
